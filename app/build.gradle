buildscript {
    repositories {
        jcenter()
        google()
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
        classpath 'com.github.JakeWharton:sdk-manager-plugin:0ce4cdf08009d79223850a59959d9d6e774d0f77'
        classpath 'de.mobilej.unmock:UnMockPlugin:0.6.4'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'de.mobilej.unmock'
apply plugin: 'jacoco'

android {
    compileSdkVersion 24
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "io.appium.uiautomator2"
        minSdkVersion 19
        targetSdkVersion 24
        versionCode 1
        archivesBaseName = "appium-uiautomator2"
        /**
         * versionName should be updated and inline with version in package.json for every npm release.
         */
        versionName "1.2.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            debuggable true
            testCoverageEnabled = true 
        }
        customDebuggableBuildType {
            debuggable true
            testCoverageEnabled = true 
        }
        applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = outputFileName.replace("debug.apk", "v${defaultConfig.versionName}.apk")
            }
        }
    }
    flavorDimensions "default"
    lintOptions {
        abortOnError false
    }
    productFlavors {
        e2eTest {
            applicationId 'io.appium.uiautomator2.e2etest'
        }
        server {
            applicationId 'io.appium.uiautomator2.server'
        }
    }
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
    packagingOptions {
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
    }
}

unMock {
    keepStartingWith "com.android.internal.util."
    keepStartingWith "android.util."
    keepStartingWith "android.view."
    keepStartingWith "android.internal."
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'io.netty:netty-all:4.0.41.Final'
    compile 'com.jayway.jsonpath:json-path:0.8.1'
    compile 'com.squareup.okhttp:okhttp:2.5.0'
    compile 'com.android.support.test:runner:0.5'
    compile 'com.android.support:support-annotations:23.1.1'
    compile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
    unmock 'org.robolectric:android-all:7.1.0_r7-robolectric-0'
    testCompile 'org.json:json:20160810'
    testCompile 'junit:junit:4.12'
    testCompile 'org.powermock:powermock-module-junit4:1.6.4'
    testCompile 'org.powermock:powermock-module-junit4-rule:1.6.4'
    testCompile 'org.powermock:powermock-api-mockito:1.6.4'
    testCompile 'org.powermock:powermock-classloading-xstream:1.6.4'
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support:support-annotations:23.1.1'
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
    androidTestCompile 'com.android.support.test.espresso:espresso-web:2.2.2'
    compile 'com.google.dagger:dagger:2.10'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.10'
    implementation 'com.android.support:support-annotations:27.0.2'
}

task installAUT(type: Exec) {
    group = 'test'
    description = 'Install app under test'
    def adb = android.getAdbExe().toString()
    def apk = file('../app/src/androidTestE2eTest/java/io/appium/uiautomator2/unittest/resource/ApiDemos-debug.apk')
    commandLine "$adb install -r -g $apk".split(' ')
    standardOutput = new ByteArrayOutputStream()
    ext.output = {
        return standardOutput.toString()
    }
    println ext.output.toString()
}

afterEvaluate {
    tasks.each { task ->
        if (task.name.startsWith('connectedE2eTestDebugAndroidTest')) {
            task.dependsOn installAUT
        }
    }
}

jacoco { 
    toolVersion = "0.7.5.201505241946" 
}

